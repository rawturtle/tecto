// Default styling for containers both rows and columns
.ct\:hori, .ct\:vert, .view {
	.position(relative);
	.size(100%, fit-content);
	.box-sizing(border-box);
	.scrollbar();
	// Position a container absolute
	&.cp\:absolute {
		.position(absolute);
	}
	// Position a container fixed
	&.cp\:fixed {
		.position(fixed);
	}
	// Hide a container
	&.cv\:hide {
		.display(none);
	}
	// Wraping
	&.cw\:none {
		.flex-wrap(no-wrap);
	}
	&.cw\:wrap {
		.flex-wrap(wrap);
	}

	// Set the index of a container
	&.ci\:-5 {
		.index(-5);
	}
	&.ci\:-4 {
		.index(-4);
	}
	&.ci\:-3 {
		.index(-3);
	}
	&.ci\:-2 {
		.index(-2);
	}
	&.ci\:-1 {
		.index(-1);
	}
	&.ci\:0 {
		.index(0);
	}
	&.ci\:1 {
		.index(1);
	}
	&.ci\:2 {
		.index(2);
	}
	&.ci\:3 {
		.index(3);
	}
	&.ci\:4 {
		.index(4);
	}
	&.ci\:5 {
		.index(5);
	}
}

// Application window
section.application {
	.size(100%, 100vh);
	.overflow(hidden, auto)
}

// Container flowing from top to bottom
.ct\:vert, .view {
	.flex-box(column, wrap, center, center, center);
	// Single position placement bindings (cp: container placement)
	&.ca\:left {
		.align-items(flex-start);
		.text-align(left);
		.margin(left, 0);
	}
	&.ca\:right {
		.align-items(flex-end);
		.text-align(right);
		.margin(right, 0);
	}
	&.ca\:top {
		.justify-content(flex-start);
	}
	&.ca\:bottom {
		.justify-content(flex-end);
	}
	// Duel position placement bindings
	&.ca\:top-left {
		.align-items(flex-start);
		.text-align(left);
		.margin(left, 0);
		.justify-content(flex-start);
	}
	&.ca\:bottom-left {
		.align-items(flex-start);
		.text-align(left);
		.margin(left, 0);
		.justify-content(flex-end);
	}
	&.ca\:top-right {
		.align-items(flex-end);
		.text-align(right);
		.margin(right, 0);
		.justify-content(flex-start);
	}
	&.ca\:bottom-right {
		.align-items(flex-end);
		.text-align(right);
		.margin(right, 0);
		.justify-content(flex-end);
	}
	// Reverse
	&.cd\:reverse {
		.flex-direction(column-reverse);
	}
}

// Container flowing from left to right (rows)
&.ct\:hori {
	.flex-box(row, wrap, center, center, center);
	// Single position placement bindings (cp: container placement)
	&.ca\:left {
		.justify-content(flex-start);
		.text-align(left);
		.margin(left, 0);
	}
	&.ca\:right {
		.justify-content(flex-end);
		.text-align(right);
		.margin(right, 0);
	}
	&.ca\:top {
		.align-items(flex-start);
	}
	&.ca\:bottom {
		.align-items(flex-end);
	}
	// Duel position placement bindings
	&.ca\:top-left {
		.justify-content(flex-start);
		.text-align(left);
		.margin(left, 0);
		.align-items(flex-start);
	}
	&.ca\:bottom-left {
		.justify-content(flex-start);
		.text-align(left);
		.margin(left, 0);
		.align-items(flex-end);
	}
	&.ca\:top-right {
		.justify-content(flex-end);
		.text-align(right);
		.margin(right, 0);
		.align-items(flex-start);
	}
	&.ca\:bottom-right {
		.justify-content(flex-end);
		.text-align(right);
		.margin(right, 0);
		.align-items(flex-end);
	}
	// Reverse
	&.cd\:reverse {
		.flex-direction(row-reverse);
	}
}

.cv\:hide {
  display: none;
}

// Container spacing/rules
.cs\:gutter {
	.size(@container-gutter, @container-gutter);
}
// Container sizings: 1/2, 1/3, 1/4, 1/5, 1/6, 1/7, 1/8
.cs\:1\/2, .cs\:1\/3, .cs\:1\/4, .cs\:1\/5, .cs\:1\/6, .cs\:2\/7, .cs\:1\/8 {
	.flex-size(1);
}
// Container sizings: 2/3, 2/4, 2/5, 2/6, 2/7, 2/8
.cs\:2\/3, .cs\:2\/4, .cs\:2\/5, .cs\:2\/6, .cs\:2\/7, .cs\:2\/8 {
	.flex-size(2);
}
// Container sizings: 3/4, 3/5, 3/6, 3/7, 3/8
.cs\:3\/4, .cs\:3\/5, .cs\:3\/6, .cs\:3\/6, .cs\:3\/7, .cs\:3\/8 {
	.flex-size(3);
}
// Container sizings: 4/5, 4/6, 4/7, 4/8
.cs\:4\/5, .cs\:4\/6, .cs\:4\/6, .cs\:4\/7, .cs\:4\/8 {
	.flex-size(4);
}
// Container sizings: 5/6, 5/7, 5/8
.cs\:5\/6, .cs\:5\/6, .cs\:5\/7, .cs\:5\/8 {
	.flex-size(5);
}
// Container sizings: 6/7, 6/8
.cs\:6\/7, .cs\:6\/8 {
	.flex-size(6);
}
// Container sizing: 7/8
.cs\:7\/8 {
	.flex-size(7);
}
// Container sizing: fill width of parent container
.cs\:fw {
	.size(100%, auto);
	.max-size(100%, auto);
}
// Container sizing: fill height of parent container
.cs\:fh {
	.size(auto, 100%);
	.max-size(auto, 100%);
}
// Container sizing: fill width and height parent container
.cs\:fwh, .view {
	.size(100%, 100%);
	.max-size(100%, 100%);
}
// Container sizing: text/content with a fixed max-width
.cs\:content {
	.max-size(@container-content-width);
}
// Container sizing: auto max sizing
.cs\:auto {
	.max-size(auto, auto);
}
// }

// Tablet Adjustments
@media screen and (max-width: @breakpoint-tablet) {


	.ct\:vert {
		&.tb\:cd\:reverse {
			.flex-direction(column-reverse);
		}
	}

	.ct\:hori {
		&.tb\:cd\:reverse {
			.flex-direction(row-reverse);
		}
	}

	// Wrapping
	.tb\:cw\:none {
		.flex-wrap(no-wrap);
	}
	.tb\:cw\:wrap {
		.flex-wrap(wrap);
	}

	// Show a container in tablet only
	.tb\:cv\:show {
		&.ct:vert {
			.flex-box(column, wrap, center, center, center);
		}
		&.ct:hori {
			.flex-box(row, wrap, center, center, center);
		}
	}

	// Hide a container in mobile only
	.tb\:cv\:hide {
		.display(none);
	}

	// Tablet container sizings: 1/2, 1/3, 1/4, 1/5, 1/6, 1/7, 1/8
	&.tb\:cs\:1\/2, &.tb\:cs\:1\/3, &.tb\:cs\:1\/4, &.tb\:cs\:1\/5, &.tb\:cs\:1\/6, &.tb\:cs\:2\/7 &.tb\:cs\:1\/8 {
		.flex-size(1);
	}
	// Tablet container sizings: 2/3, 2/4, 2/5, 2/6, 2/7, 2/8
	&.tb\:cs\:2\/3, &.tb\:cs\:2\/4, &.tb\:cs\:2\/5, &.tb\:cs\:2\/6, &.tb\:cs\:2\/7, &.tb\:cs\:2\/8 {
		.flex-size(2);
	}
	// Tablet container sizings: 3/4, 3/5, 3/6, 3/7, 3/8
	&.tb\:cs\:3\/4, &.tb\:cs\:3\/5, &.tb\:cs\:3\/6, &.tb\:cs\:3\/6, &.tb\:cs\:3\/7, &.tb\:cs\:3\/8 {
		.flex-size(3);
	}
	// Tablet container sizings: 4/5, 4/6, 4/7, 4/8
	&.tb\:cs\:4\/5, &.tb\:cs\:4\/6, &.tb\:cs\:4\/6, &.tb\:cs\:4\/7, &.tb\:cs\:4\/8 {
		.flex-size(4);
	}
	// Tablet container sizings: 5/6, 5/7, 5/8
	&.tb\:cs\:5\/6, &.tb\:cs\:5\/6, &.tb\:cs\:5\/7, &.tb\:cs\:5\/8 {
		.flex-size(5);
	}
	// Tablet container sizings: 6/7, 6/8
	&.tb\:cs\:6\/7, &.tb\:cs\:6\/8 {
		.flex-size(6);
	}
	// Tablet container sizing: 7/8
	&.tb\:cs\:7\/8 {
		.flex-size(7);
	}
	// Tablet container sizing: fill width of parent container
	&.tb\:cs\:fw {
		.size(100%, auto);
		.max-size(100%, auto);
	}
	// Tablet container sizing: fill height of parent container
	&.tb\:cs\:fh {
		.size(auto, 100%);
		.max-size(auto, 100%);
	}
	// Tablet container sizing: fill width and height parent container
	&.tb\:cs\:fwh {
		.size(100%, 100%);
		.max-size(100%, 100%);
	}

	// Tablet columns
	&.tb\:ct\:vert {
		//Flexbox going vertical from top to bottom
		.flex-box(column, nowrap, center, center, center);
		// Single position placement bindings
		&.ca\:left {
			.align-items(flex-start);
		}
		&.ca\:right {
			.align-items(flex-end);
		}
		&.ca\:top {
			.justify-content(flex-start);
		}
		&.ca\:bottom {
			.justify-content(flex-end);
		}
		// Duel position placement bindings
		&.ca\:top-left {
			.justify-content(flex-start);
			.align-items(flex-start);
		}
		&.ca\:top-right {
			.justify-content(flex-start);
			.align-items(flex-end);
		}
		&.ca\:bottom-left {
			.justify-content(flex-end);
			.align-items(flex-start);
		}
		&.ca\:bottom-right {
			.justify-content(flex-end);
			.align-items(flex-end);
		}
		// Reverse
		&.cd\:reverse {
			.flex-direction(column);
		}
	}
}

// Mobile Adjustments
@media screen and (max-width: @breakpoint-mobile) {

	.ct\:vert {
		&.mb\:cd\:reverse {
			.flex-direction(column-reverse);
		}
	}

	.ct\:hori {
		&.mb\:cd\:reverse {
			.flex-direction(row-reverse);
		}
	}

	// Wrapping
	.mb\:cw\:none {
		.flex-wrap(no-wrap);
	}
	.mb\:cw\:wrap {
		.flex-wrap(wrap);
	}

	// Show a container in mobile only
	.mb\:cv\:show {
		&.ct:vert {
			.flex-box(column, wrap, center, center, center);
		}
		&.ct:hori {
			.flex-box(row, wrap, center, center, center);
		}
	}

	// Hide a container in mobile only
	.mb\:cv\:hide {
		.display(none);
	}

	// Mobile container sizings: 1/2, 1/3, 1/4, 1/5, 1/6, 1/7, 1/8
	&.mb\:cs\:1\/2, &.mb\:cs\:1\/3, &.mb\:cs\:1\/4, &.mb\:cs\:1\/5, &.mb\:cs\:1\/6, &.mb\:cs\:2\/7 &.mb\:cs\:1\/8 {
		.flex-size(1);
	}
	// Mobile container sizings: 2/3, 2/4, 2/5, 2/6, 2/7, 2/8
	&.mb\:cs\:2\/3, &.mb\:cs\:2\/4, &.mb\:cs\:2\/5, &.mb\:cs\:2\/6, &.mb\:cs\:2\/7, &.mb\:cs\:2\/8 {
		.flex-size(2);
	}
	// Mobile container sizings: 3/4, 3/5, 3/6, 3/7, 3/8
	&.mb\:cs\:3\/4, &.mb\:cs\:3\/5, &.mb\:cs\:3\/6, &.mb\:cs\:3\/6, &.mb\:cs\:3\/7, &.mb\:cs\:3\/8 {
		.flex-size(3);
	}
	// Mobile container sizings: 4/5, 4/6, 4/7, 4/8
	&.mb\:cs\:4\/5, &.mb\:cs\:4\/6, &.mb\:cs\:4\/6, &.mb\:cs\:4\/7, &.mb\:cs\:4\/8 {
		.flex-size(4);
	}
	// Mobile container sizings: 5/6, 5/7, 5/8
	&.mb\:cs\:5\/6, &.mb\:cs\:5\/6, &.mb\:cs\:5\/7, &.mb\:cs\:5\/8 {
		.flex-size(5);
	}
	// Mobile container sizings: 6/7, 6/8
	&.mb\:cs\:6\/7, &.mb\:cs\:6\/8 {
		.flex-size(6);
	}
	// Mobile container sizing: 7/8
	&.mb\:cs\:7\/8 {
		.flex-size(7);
	}
	// Mobile container sizing: fill width of parent container
	&.mb\:cs\:fw {
		.size(100%, auto);
		.max-size(100%, auto);
	}
	// Mobile container sizing: fill height of parent container
	&.mb\:cs\:fh {
		.size(auto, 100%);
		.max-size(auto, 100%);
	}
	// Mobile container sizing: fill width and height parent container
	&.mb\:cs\:fwh {
		.size(100%, 100%);
		.max-size(100%, 100%);
	}

	// Mobile container columns
	&.mb\:ct\:vert {
		//Flexbox going vertical from top to bottom
		.flex-box(column, nowrap, center, center, center);
		// Single position placement bindings
		&.ca\:left {
			.align-items(flex-start);
		}
		&.ca\:right {
			.align-items(flex-end);
		}
		&.ca\:top {
			.justify-content(flex-start);
		}
		&.ca\:bottom {
			.justify-content(flex-end);
		}
		// Duel position placement bindings
		&.ca\:top-left {
			.justify-content(flex-start);
			.align-items(flex-start);
		}
		&.ca\:top-right {
			.justify-content(flex-start);
			.align-items(flex-end);
		}
		&.ca\:bottom-left {
			.justify-content(flex-end);
			.align-items(flex-start);
		}
		&.ca\:bottom-right {
			.justify-content(flex-end);
			.align-items(flex-end);
		}
		// Reverse
		&.cd\:reverse {
			.flex-direction(column);
		}
	}
}